using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerControll : MonoBehaviour
{   public Rigidbody2D playerRb ; // работа с методами риджитбоди
    public float moveForce = 50 ; // сила ходьбы
    public float jumpForce = 500 ; //сила прыжка
    public bool isGrounded = false ; // проверка на нахождение в воздухе
    public Animator anim;

    // Start is called before the first frame update
    void Start()
    {
        anim = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {
        anim.SetFloat("moveX", Mathf.Abs(Input.GetAxisRaw("Horizontal")));
        if(isGrounded) 
        { 
            anim.SetBool("Jumping", false);
        }
        else
        { 
            anim.SetBool("Jumping", true);
        }
        if (moveInput < 0 && facingRight) {
            Flip();
        }
        if (moveInput > 0 && !facingRight) {
            Flip();
        }
    }
     void FixedUpdate() 
    {
        if (Input.GetKey(KeyCode.D))//понятно что при нажатии клавиши 
        {
            playerRb.AddForce(Vector2.right * moveForce);// движение силы обьекта
        }   

        if (Input.GetKey(KeyCode.A))//понятно что при нажатии клавиши 
        {
            playerRb.AddForce(Vector2.left * moveForce);// движение силы обьекта
        }   

        if (Input.GetKey(KeyCode.Space) && isGrounded == true)//понятно что при нажатии клавиши 
        {
            isGrounded = false; // когда подпрыгивает делает её ложной
            playerRb.AddForce(Vector2.up * jumpForce);// движение силы обьекта
        }   
    }
    void OnCollisionEnter2D(Collision2D collision) // есле соприкосается
    {
     if (collision.gameObject.layer == LayerMask.NameToLayer("Ground"))
            isGrounded = true ;//при столкновении землёй делает её правдой  
    }
    private void Flip()
    {
        facingRight = !facingRight;
        Vector3 Scaler = transform.localScale;
        Scaler.x *= -1;
        transform.localScale = Scaler;
    }
     
    
}
